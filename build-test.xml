<?xml version="1.0"?>

<project name="Torque" default="test" basedir=".">

  <!-- Allow any user specific values to override the defaults -->
  <property file="${user.home}/build.properties" />
  <!-- Allow user defaults for this project -->
  <property file="build.properties" />
  <!-- Set default values for the build -->
  <property file="default.properties" />

  <!-- Set values in test profile -->
  <property file="${torque.testProfile}"/>

  <!-- ============================================================== -->
  <!-- T O R Q U E  T E S T S                                         -->
  <!-- ============================================================== -->
  <!-- These are meant to be the comprehensive tests for Torque.      -->
  <!-- ============================================================== -->

  <target
    name="test-prepare"
    depends="filterTokens,test-libs,test-templates">

    <!-- Use the profile as the build.properties file
         in the dist directory so that it is customizable
         by each tester. -->

    <echo message="Copying profile into distribution directory: ${torque.testProfile}"/>

    <copy
      tofile="${torque.distDir}/build.properties"
      file="${torque.testProfile}"
      overwrite="yes"
    />

    <!-- copy test schemas -->
    <copy
      todir="${torque.distDir}/schema"
      filtering="yes"
      overwrite="yes">
      <fileset dir="${rttest.dir}">
        <include name="**/*.xml"/>
      </fileset>
    </copy>

    <!-- copy test sources -->
    <copy todir="${torque.distDir}/src/java">
      <fileset dir="${rttest.dir}"/>
    </copy>

    <copy
      tofile="${build.test}/rttest/build-torque.xml"
      file="${src.dir}/conf/build-torque.xml"
      overwrite="yes"
    />
  </target>

  <target
    name="test"
    description="run the testbed">
    <antcall target="test-prepare"/>
    <antcall target="test-pre-runtime"/>
    <antcall target="test-runtime"/>
    <antcall target="test-post-runtime"/>
  </target>

  <target
    name="test-classpath"
    description="run the testbed using the useClasspath property">
    <property name="useClasspath" value="true"/>
    <property name="templatePath" value="no_templatePath"/>
    <antcall target="test"/>
  </target>

  <!-- ============================================================== -->
  <!-- P R E   R U N T I M E   T E S T S                              -->
  <!-- ============================================================== -->
  <!-- These are the tests for the torque tests which are             -->
  <!-- primarily generative in nature.                                -->
  <!--                                                                -->
  <!-- The tests will be run from the distribution that is            -->
  <!-- produced by the build process. This is a test of Torque's      -->
  <!-- generative abilities.                                          -->
  <!--                                                                -->
  <!-- These are the tasks that we will be testing:                   -->
  <!--                                                                -->
  <!-- sql                                                            -->
  <!-- om                                                             -->
  <!--                                                                -->
  <!-- The sql is also another complete set of tests:                 -->
  <!-- we need to run the task for each of the supported databases    -->
  <!-- to make sure that generated SQL remains coherent across        -->
  <!-- changes to the templates.                                      -->
  <!-- ============================================================== -->

  <target
    name="test-pre-runtime">

    <antcall target="test-doc"/>
    <antcall target="test-create-db"/>
    <antcall target="test-sql"/>
    <antcall target="test-id-table-init-sql"/>
    <antcall target="test-insert-sql"/>
    <antcall target="test-om"/>
  </target>

  <!-- ============================================================== -->
  <!-- P O S T   R U N T I M E   T E S T S                            -->
  <!-- ============================================================== -->

  <target
    name="test-post-runtime">

    <antcall target="test-datadtd"/>
    <antcall target="test-datadump"/>
    <antcall target="test-datasql"/>
    <antcall target="test-jdbc"/>

    <!--
    <antcall target="test-sql-classpath"/>
    <antcall target="test-om-classpath"/>
    <antcall target="test-sql2xml"/>
    -->

  </target>

  <target
    name="test-sql">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="sql">
    </ant>
  </target>

  <target
    name="test-id-table-init-sql">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="id-table-init-sql">
    </ant>
  </target>

  <target
    name="test-doc">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="doc">
    </ant>
  </target>

  <target
    name="test-create-db">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="create-db">
    </ant>
  </target>

  <target
    name="test-insert-sql">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="insert-sql">
    </ant>
  </target>

  <target
    name="test-om">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="om">
    </ant>
    <!-- Compile the classes -->
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="compile"
      inheritAll="false">
    </ant>
  </target>

  <!-- Still uses ${project} references. BAD!!! -->
  <target
    name="test-datadtd">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="datadtd"
      inheritAll="false">
    </ant>
  </target>

  <!-- Still uses ${project} references. BAD!!! -->
  <target
    name="test-datadump">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="datadump"
      inheritAll="false">
    </ant>
  </target>

  <!-- Still uses ${project} references. BAD!!! -->
  <target
    name="test-datasql">
    <copy
      todir="${torque.distDir}/schema/"
      file="${torque.distDir}/src/bookstore-data.dtd"/>
    <copy
      tofile="${torque.distDir}/schema/bookstore-data.xml"
      file="${torque.distDir}/src/bookstore-bookstore-all-data.xml"/>
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="datasql"
      inheritAll="false">
    </ant>
  </target>

  <target
    name="test-jdbc">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="jdbc">
      <property name="torque.home" value="${torque.distDir}"/>
    </ant>
  </target>

  <target name="filterTokens">
    <filter token="APPLICATION_ROOT" value="."/>
    <filter token="DATABASE" value="${torque.database}"/>
    <filter token="DATABASE_DEFAULT" value="${torque.defaultDatabase}"/>
    <filter token="DATABASE_URL" value="${torque.database.url}"/>
    <filter token="DATABASE_USER" value="${torque.database.user}"/>
    <filter token="DATABASE_DRIVER" value="${torque.database.driver}"/>
    <filter token="DATABASE_PASSWORD" value="${torque.database.password}"/>
    <filter token="DATABASE_ID_METHOD" value="${torque.idMethod}"/>
    <filter token="DATABASE_ADAPTER" value="${torque.database}"/>
  </target>

  <!-- ============================================================== -->
  <!-- R U N T I M E  T E S T S                                       -->
  <!-- ============================================================== -->

  <!-- Build classpath -->
  <path id="classpath">
    <pathelement location="${build.dest}"/>
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-configuration.jar}"/>
    <pathelement location="${commons-dbcp.jar}"/>
    <pathelement location="${commons-lang.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${commons-pool.jar}"/>
    <pathelement location="${jcs.jar}"/>
    <pathelement location="${jdbc.jar}"/>
    <pathelement location="${jndi.jar}"/>
    <pathelement location="${log4j.jar}"/>
    <pathelement location="${stratum.jar}"/>
    <pathelement location="${tomcat-naming.jar}"/>
    <pathelement location="${torque.destDir}"/>
    <pathelement location="${torque.testDatabaseJar}"/>
    <pathelement location="${village.jar}"/>
    <pathelement location="${xerces.jar}"/>
    <pathelement location="${xmlParserAPIs.jar}"/>
  </path>

  <target
    name="test-runtime"
    depends="filterTokens">

    <echo>
      ${build.dest}
      ${commons-beanutils.jar}
      ${commons-collections.jar}
      ${commons-configuration.jar}
      ${commons-dbcp.jar}
      ${commons-lang.jar}
      ${commons-logging.jar}
      ${commons-pool.jar}
      ${jcs.jar}
      ${jdbc.jar}
      ${jndi.jar}
      ${log4j.jar}
      ${stratum.jar}
      ${tomcat-naming.jar}
      ${torque.testDatabaseJar}
      ${village.jar}
      ${xerces.jar}
      ${xmlParserAPIs.jar}
    </echo>

    <!-- Copy test Torque.properties -->
    <copy
      tofile="${build.test}/rttest/Torque.properties"
      file="src/conf/master/Torque.master"
      filtering="yes"
      overwrite="yes"
    />

    <!-- Runs the actual rttest tests -->
    <junit printsummary="no" haltonfailure="yes">
      <classpath>
        <pathelement location="${torque.destDir}"/>
        <path refid="classpath"/>
      </classpath>

      <formatter type="plain" usefile="false"/>

      <batchtest>
        <fileset dir="${torque.destDir}">
          <include name="**/*Test*.class"/>
          <exclude name="**/BaseTestCase.class"/>
          <exclude name="**/LargeSelectTest.class"/>
        </fileset>
      </batchtest>
    </junit>

  </target>

  <target
    name="test-libs">

    <mkdir dir="${test.libDir}"/>
    <mkdir dir="${build.test}/logs"/>

    <copy file="${build.dir}/${torque.jar}" todir="${test.libDir}"/>
    <copy file="${commons-beanutils.jar}" todir="${test.libDir}"/>
    <copy file="${commons-collections.jar}" todir="${test.libDir}"/>
    <copy file="${commons-configuration.jar}" todir="${test.libDir}"/>
    <copy file="${commons-dbcp.jar}" todir="${test.libDir}"/>
    <copy file="${commons-lang.jar}" todir="${test.libDir}"/>
    <copy file="${commons-logging.jar}" todir="${test.libDir}"/>
    <copy file="${commons-pool.jar}" todir="${test.libDir}"/>
    <copy file="${jcs.jar}" todir="${test.libDir}"/>
    <copy file="${jdbc.jar}" todir="${test.libDir}"/>
    <copy file="${jndi.jar}" todir="${test.libDir}"/>
    <copy file="${log4j.jar}" todir="${test.libDir}"/>
    <copy file="${stratum.jar}" todir="${test.libDir}"/>
    <copy file="${tomcat-naming.jar}" todir="${test.libDir}"/>
    <copy file="${torque.testDatabaseJar}" todir="${test.libDir}"/>
    <copy file="${velocity.jar}" todir="${test.libDir}"/>
    <copy file="${village.jar}" todir="${test.libDir}"/>
    <copy file="${xerces.jar}" todir="${test.libDir}"/>
    <copy file="${xmlParserAPIs.jar}" todir="${test.libDir}"/>
  </target>

  <!-- copy templates if they are not loaded from the classpath -->
  <target
    name="test-templates">
<!--
    FIXME!!
    the id-table-init-sql loads ${templatePath}/sql/id-table/project.props
    so the templates must be copied for now

    unless="useClasspath">
-->
    <copy todir="${test.templateDir}">
      <fileset dir="${src.dir}/templates"/>
    </copy>

  </target>

  <!-- ============================================================== -->
  <!-- S Q L  T E S T S                                               -->
  <!-- ============================================================== -->

  <target
    name="sql-test"
    depends="test-libs,test-templates">

    <filter token="DATABASE_DEFAULT" value="${torque.sqlTest.defaultDatabase}"/>
    <filter token="DATABASE_URL" value="${torque.sqlTest.databaseUrl}"/>
    <filter token="DATABASE_USER" value="${torque.database.user}"/>
    <filter token="DATABASE_DRIVER" value="${torque.database.driver}"/>
    <filter token="DATABASE_PASSWORD" value="${torque.database.password}"/>
    <filter token="DATABASE_ID_METHOD" value="${torque.idMethod}"/>
    <filter token="DATABASE_ADAPTER" value="${torque.database.adapter}"/>

    <mkdir dir="${build.test}/sqltest"/>

    <copy
      tofile="${build.test}/sqltest/build.properties"
      file="${torque.testProfile}"
      overwrite="yes"
    />

    <copy
      tofile="${build.test}/sqltest/build-torque.xml"
      file="${src.dir}/conf/build-torque.xml"
      overwrite="yes"
    />

    <copy
      todir="${build.test}/sqltest/schema"
      file="${src.dir}/sqltest/type-test-schema.xml"
      filtering="yes"
      overwrite="yes"
    />

    <ant
      dir="${build.test}/sqltest"
      antfile="${torque.buildFile}"
      target="create-db">
    </ant>

    <ant
      dir="${build.test}/sqltest"
      antfile="${torque.buildFile}"
      target="sql">
    </ant>

    <ant
      dir="${build.test}/sqltest"
      antfile="${torque.buildFile}"
      target="insert-sql">
    </ant>

  </target>

</project>
