<?xml version="1.0"?>

<project name="Torque" default="test" basedir=".">

  <!-- Allow any user specific values to override the defaults -->
  <property file="${user.home}/build.properties" />
  <!-- Allow user defaults for this project -->
  <property file="build.properties" />
  <!-- Set default values for the build -->
  <property file="default.properties" />

  <!-- Set values in test profile -->
  <property file="${torque.testProfile}"/>

  <!-- ============================================================== -->
  <!-- T O R Q U E  T E S T S                                         -->
  <!-- ============================================================== -->
  <!-- These are meant to be the comprehensive tests for Torque.      -->
  <!-- ============================================================== -->

  <target
    name="test"
    depends="filterTokens,test-libs,test-templates">

    <!-- Use the profile as the build.properties file
         in the dist directory so that it is customizable
         by each tester. -->

    <echo message="Copying profile into distribution directory: ${torque.testProfile}"/>

    <copy
      tofile="${torque.distDir}/build.properties"
      file="${torque.testProfile}"
      overwrite="yes"
    />

    <!-- copy test schemas -->
    <copy
      todir="${torque.distDir}/schema"
      filtering="yes"
      overwrite="yes">
      <fileset dir="${rttest.dir}">
        <include name="**/*.xml"/>
      </fileset>
    </copy>

    <!-- copy test sources -->
    <copy todir="${torque.distDir}/src/java">
      <fileset dir="${rttest.dir}"/>
    </copy>

    <copy
      tofile="${build.test}/rttest/build-torque.xml"
      file="${src.dir}/conf/build-torque.xml"
      overwrite="yes"
    />

    <antcall target="test-pre-runtime"/>
    <antcall target="test-runtime"/>
    <antcall target="test-post-runtime"/>

  </target>

  <!-- ============================================================== -->
  <!-- P R E   R U N T I M E   T E S T S                              -->
  <!-- ============================================================== -->
  <!-- These are the tests for the torque tests which are             -->
  <!-- primarily generative in nature.                                -->
  <!--                                                                -->
  <!-- The tests will be run from the distribution that is            -->
  <!-- produced by the build process. This is a test of Torque's      -->
  <!-- generative abilities.                                          -->
  <!--                                                                -->
  <!-- These are the tasks that we will be testing:                   -->
  <!--                                                                -->
  <!-- project-sql                                                    -->
  <!-- project-om                                                     -->
  <!--                                                                -->
  <!-- The project-sql is also another complete set of tests:         -->
  <!-- we need to run the task for each of the supported databases    -->
  <!-- to make sure that generated SQL remains coherent across        -->
  <!-- changes to the templates.                                      -->
  <!-- ============================================================== -->

  <target
    name="test-pre-runtime">

    <antcall target="test-create-db"/>
    <antcall target="test-project-sql"/>
    <antcall target="test-id-table-init-sql"/>
    <antcall target="test-project-insert-sql"/>
    <antcall target="test-project-om"/>
  </target>

  <!-- ============================================================== -->
  <!-- P O S T   R U N T I M E   T E S T S                            -->
  <!-- ============================================================== -->

  <target
    name="test-post-runtime">

    <antcall target="test-project-datadtd"/>
    <antcall target="test-project-datadump"/>
    <!--
    <antcall target="test-project-datasql"/>
    -->
    <antcall target="test-project-jdbc"/>

    <!--
    <antcall target="test-project-sql-classpath"/>
    <antcall target="test-project-om-classpath"/>
    <antcall target="test-project-sql2xml"/>
    -->

  </target>

  <target
    name="test-project-sql">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="project-sql">
    </ant>
  </target>

  <target
    name="test-id-table-init-sql">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="id-table-init-sql">
    </ant>
  </target>

  <target
    name="test-create-db">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="project-create-db">
    </ant>
  </target>

  <target
    name="test-project-insert-sql">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="project-insert-sql">
    </ant>
  </target>

  <target
    name="test-project-om">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="project-om">
    </ant>

    <!-- Compile the classes -->

    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="compile"
      inheritAll="false">
    </ant>
  </target>

  <!-- Still uses ${project} references. BAD!!! -->
  <target
    name="test-project-datadtd">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="project-datadtd"
      inheritAll="false">
    </ant>
  </target>

  <!-- Still uses ${project} references. BAD!!! -->
  <target
    name="test-project-datadump">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="project-datadump"
      inheritAll="false">
    </ant>
  </target>

  <!-- Still uses ${project} references. BAD!!! -->
  <target
    name="test-project-datasql">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="project-datasql"
      inheritAll="false">
    </ant>
  </target>

  <target
    name="test-project-jdbc">
    <ant
      dir="${torque.buildFileDir}"
      antfile="${torque.buildFile}"
      target="project-jdbc">
      <property name="torque.home" value="${torque.distDir}"/>
    </ant>
  </target>

  <target
    name="test-project-sql-classpath">
  </target>

  <target
    name="test-project-om-classpath">
  </target>

  <target
    name="test-project-sql2xml">
  </target>

  <target name="filterTokens">
    <filter token="DATABASE_DEFAULT" value="${torque.defaultDatabase}"/>
    <filter token="DATABASE_URL" value="${databaseUrl}"/>
    <filter token="DATABASE_USER" value="${databaseUser}"/>
    <filter token="DATABASE_DRIVER" value="${databaseDriver}"/>
    <filter token="DATABASE_PASSWORD" value="${databasePassword}"/>
    <filter token="DATABASE_ID_METHOD" value="${torque.idMethod}"/>
    <filter token="DATABASE_ADAPTER" value="${torque.databaseAdapter}"/>
  </target>

  <!-- ============================================================== -->
  <!-- R U N T I M E  T E S T S                                       -->
  <!-- ============================================================== -->

  <!-- Build classpath -->
  <path id="classpath">
    <pathelement location="${log4j.jar}"/>
    <pathelement location="${jdbc.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-util.jar}"/>
    <pathelement location="${village.jar}"/>
    <pathelement location="${build.dest}"/>
    <pathelement location="${torque.destDir}"/>
    <pathelement location="${torque.testDatabaseJar}"/>
  </path>

  <target
    name="test-runtime"
    depends="filterTokens">

    <echo>
      ${log4j.jar}
      ${jdbc.jar}
      ${commons-collections.jar}
      ${commons-util.jar}
      ${village.jar}
      ${build.dest}
      ${torque.destDir}
      ${torque.testDatabaseJar}
    </echo>

    <!-- Copy test Torque.properties -->
    <copy
      todir="${build.test}/rttest"
      file="src/rttest/Torque.properties"
      filtering="yes"
    />

    <java
      classname="org.apache.torque.test.TorqueRunner"
      fork="true">
      <arg value="${build.test}/rttest/Torque.properties"/>
      <classpath refid="classpath"/>
    </java>
  </target>

  <target
    name="test-libs">

    <mkdir dir="${test.libDir}"/>

    <copy file="${velocity.jar}" todir="${test.libDir}"/>
    <copy file="${logkit.jar}" todir="${test.libDir}"/>
    <copy file="${xerces.jar}" todir="${test.libDir}"/>
    <copy file="${village.jar}" todir="${test.libDir}"/>
    <copy file="${log4j.jar}" todir="${test.libDir}"/>
    <copy file="${commons-collections.jar}" todir="${test.libDir}"/>
    <copy file="${commons-util.jar}" todir="${test.libDir}"/>
    <copy file="${jdbc.jar}" todir="${test.libDir}"/>
    <copy file="${build.dir}/${torque.jar}" todir="${test.libDir}"/>
    <copy file="${torque.testDatabaseJar}" todir="${test.libDir}"/>
  
  </target>
  
  <target
    name="test-templates">
    
    <copy todir="${test.templateDir}">
      <fileset dir="${src.dir}/templates"/>
    </copy>

  </target>
  
  <!-- ============================================================== -->
  <!-- S Q L  T E S T S                                               -->
  <!-- ============================================================== -->
    
  <target
    name="test-sql"
    depends="test-libs,test-templates">
    
    <filter token="DATABASE_DEFAULT" value="${torque.sqlTest.defaultDatabase}"/>
    <filter token="DATABASE_URL" value="${torqe.sqlTest.databaseUrl}"/>
    <filter token="DATABASE_USER" value="${databaseUser}"/>
    <filter token="DATABASE_DRIVER" value="${databaseDriver}"/>
    <filter token="DATABASE_PASSWORD" value="${databasePassword}"/>
    <filter token="DATABASE_ID_METHOD" value="${torque.idMethod}"/>
    <filter token="DATABASE_ADAPTER" value="${torque.databaseAdapter}"/>
    
    <mkdir dir="${build.test}/sqltest"/>
    
    <copy
      tofile="${build.test}/sqltest/build.properties"
      file="${torque.testProfile}"
      overwrite="yes"
    />

    <copy
      tofile="${build.test}/sqltest/build-torque.xml"
      file="${src.dir}/conf/build-torque.xml"
      overwrite="yes"
    />

    <copy
      todir="${build.test}/sqltest/schema"
      file="${src.dir}/sqltest/type-test-schema.xml"
      filtering="yes"
      overwrite="yes"
    />

    <ant
      dir="${build.test}/sqltest"
      antfile="${torque.buildFile}"
      target="project-create-db">
    </ant>

    <ant
      dir="${build.test}/sqltest"
      antfile="${torque.buildFile}"
      target="project-sql">
    </ant>

    <ant
      dir="${build.test}/sqltest"
      antfile="${torque.buildFile}"
      target="project-insert-sql">
    </ant>

  </target>

</project>
