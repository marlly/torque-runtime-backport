<?xml version="1.0" encoding="UTF-8"?>

<!--build.xml generated by maven from project.xml version 3.2-dev
  on date October 30 2004, time 1304-->

<project default="jar" name="torque" basedir=".">
  <property name="defaulttargetdir" value="target">
  </property>
  <property name="libdir" value="target/lib">
  </property>
  <property name="classesdir" value="target/classes">
  </property>
  <property name="testclassesdir" value="target/test-classes">
  </property>
  <property name="testclassesdir" value="target/test-classes">
  </property>
  <property name="testreportdir" value="target/test-reports">
  </property>
  <property name="distdir" value="dist">
  </property>
  <property name="javadocdir" value="dist/docs/api">
  </property>
  <property name="final.name" value="torque-3.2-dev">
  </property>
  <path id="build.classpath">
    <fileset dir="${libdir}">
      <include name="**/*.jar">
      </include>
    </fileset>
  </path>
  <target name="init" description="o Initializes some properties">
    <mkdir dir="${libdir}">
    </mkdir>
    <condition property="noget">
      <equals arg2="only" arg1="${build.sysclasspath}">
      </equals>
    </condition>
    <available property="Junit.present" classname="junit.framework.Test">
    </available>
  </target>
  <target name="compile" description="o Compile the code" depends="get-deps">
    <mkdir dir="${classesdir}">
    </mkdir>
    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="src/java">
        </pathelement>
      </src>
      <classpath refid="build.classpath">
      </classpath>
    </javac>
  </target>
  <target name="jar" description="o Create the jar" depends="compile,test">
    <jar jarfile="${defaulttargetdir}/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
    </jar>
  </target>
  <target name="clean" description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}">
    </delete>
    <delete dir="${distdir}">
    </delete>
  </target>
  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
    <mkdir dir="dist">
    </mkdir>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}" includes="*.jar">
      </fileset>
      <fileset dir="${basedir}" includes="LICENSE*, README*">
      </fileset>
    </copy>
  </target>
  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures.">
    </fail>
  </target>
  <target name="internal-test" if="Junit.present" depends="junit-present,compile-tests">
    <mkdir dir="${testreportdir}">
    </mkdir>
    <junit dir="./" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
      <sysproperty key="basedir" value=".">
      </sysproperty>
      <formatter type="xml">
      </formatter>
      <formatter usefile="false" type="plain">
      </formatter>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${testclassesdir}">
        </pathelement>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
      <batchtest todir="${testreportdir}">
        <fileset dir="src/test">
          <include name="**/*Test*.java">
          </include>
          <exclude name="**/BaseTestCase.java">
          </exclude>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="junit-present" unless="Junit.present" depends="compile-tests">
    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not done.</echo>
  </target>
  <target name="compile-tests" depends="compile">
    <mkdir dir="${testclassesdir}">
    </mkdir>
    <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="src/test">
        </pathelement>
      </src>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
    </javac>
  </target>
  <target name="javadoc" description="o Generate javadoc" depends="get-deps">
    <mkdir dir="${javadocdir}">
    </mkdir>
    <tstamp>
      <format pattern="2000-yyyy" property="year">
      </format>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy;  Apache Software Foundation. All Rights Reserved.">
    </property>
    <property name="title" value="Torque 3.2-dev API">
    </property>
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="src/java" packagenames="org.apache.torque.*">
      <classpath>
        <path refid="build.classpath">
        </path>
      </classpath>
    </javadoc>
  </target>
  <target name="get-deps" unless="noget" depends="init">
    <get dest="${libdir}/avalon-framework-4.1.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//avalon-framework/jars/avalon-framework-4.1.4.jar">
    </get>
    <get dest="${libdir}/commons-beanutils-1.6.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//commons-beanutils/jars/commons-beanutils-1.6.1.jar">
    </get>
    <get dest="${libdir}/commons-collections-3.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//commons-collections/jars/commons-collections-3.0.jar">
    </get>
    <get dest="${libdir}/commons-configuration-1.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//commons-configuration/jars/commons-configuration-1.0.jar">
    </get>
    <get dest="${libdir}/commons-dbcp-1.2.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//commons-dbcp/jars/commons-dbcp-1.2.1.jar">
    </get>
    <get dest="${libdir}/commons-lang-2.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//commons-lang/jars/commons-lang-2.0.jar">
    </get>
    <get dest="${libdir}/commons-logging-1.0.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//commons-logging/jars/commons-logging-1.0.4.jar">
    </get>
    <get dest="${libdir}/commons-pool-1.2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//commons-pool/jars/commons-pool-1.2.jar">
    </get>
    <get dest="${libdir}/jcs-20030822.182132.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//jcs/jars/jcs-20030822.182132.jar">
    </get>
    <get dest="${libdir}/jdbc-2.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//jdbc/jars/jdbc-2.0.jar">
    </get>
    <get dest="${libdir}/jndi-1.2.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//jndi/jars/jndi-1.2.1.jar">
    </get>
    <get dest="${libdir}/log4j-1.2.8.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//log4j/jars/log4j-1.2.8.jar">
    </get>
    <get dest="${libdir}/logkit-1.0.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//logkit/jars/logkit-1.0.1.jar">
    </get>
    <get dest="${libdir}/stratum-1.0-b5.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//stratum/jars/stratum-1.0-b5.jar">
    </get>
    <get dest="${libdir}/village-2.0-dev-20030825.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//village/jars/village-2.0-dev-20030825.jar">
    </get>
    <get dest="${libdir}/xercesImpl-2.4.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//xerces/jars/xercesImpl-2.4.0.jar">
    </get>
    <get dest="${libdir}/xml-apis-1.0.b2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//xml-apis/jars/xml-apis-1.0.b2.jar">
    </get>
    <get dest="${libdir}/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven//junit/jars/junit-3.8.1.jar">
    </get>
  </target>
  <target name="install-maven">
    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar">
    </get>
    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
    </unjar>
  </target>
</project>
