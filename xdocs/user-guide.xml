<?xml version="1.0"?>

<document>

  <properties>
    <title>Torque User's Guide</title>
    <author email="jvanzyl@apache.org">Jason van Zyl</author>
    <author email="mpoeschl@marmot.at">Martin Poeschl</author>
  </properties>

  <body>

<section name="Table of Contents">

<p>
  <ol>
    <li>
      <a href="#About this Guide">About this Guide</a>
    </li>
    <li>
      <a href="#Torque Directory Structure">Torque Directory Structure</a>
    </li>
    <li>
      <a href="#Quick Start Guide">Quick Start Guide</a>
    </li>
    <li>
      <a href="#Configuring Torque">Configuring Torque</a>
    </li>
  </ol>
</p>

</section>

<section name="About this Guide">

<p>
  The Torque User's guide is intended to help those who intend
  to incorporate Torque into their project to provide a means
  of persistence for application objects.
</p>

</section>

<section name="Torque Directory Structure">

<p>
  Here is what the Torque directory structure looks like. There are slight
  differences between the stand-alone and TDK versions but nothing
  significant:
</p>

<source><![CDATA[
torque/
    lib/              <--  Jar files required by Torque (stand-alone version)
    schema/           <--- Project specific XML database descriptor.
    templates/        <--- Velocity templates used for source generation.
    src/              <--- Target location for output (stand-alone version).

    build-torque.xml  <--- Ant build file that controls Torque.
                           (not named build.xml to make it easier to use it
                           from your projects build.xml)
    build.properties  <--- Properties file that controls Torque behaviour.
]]></source>

<p>
  A typical user of Torque would really only ever need to edit the
  <em>build.properties</em> file in base directory, and the
  <em>project-schema.xml</em> in the <strong>schema</strong> directory. We'll
  quickly go over each of these files and some of options you have using Torque.
</p>

</section>

<section name="Quick Start Guide">

<p>
  For those who just want to see Torque go all you have to do is select your
  target database and target package in <em>build.properties</em>, edit the
  <em>project-schema.xml</em> to suit your needs, then type
  <strong>ant -f build-torque.xml</strong>.
  That's it!
</p>

<p>
  You will probably want to set the <em>project</em> property in the
  <em>build.properties</em> file eventually so that your generated sources have names
  that reflect your project name, but you can do that later :-). You also have to
  remember that if you change the <em>project</em> property that you have to
  change the name of your project XML database schema to match!
</p>

<p>
  For example if you change the <em>project</em> property from the default
  value of "project" to "killerapp" then you must change the name of the default
  schema in the <strong>schema</strong> directory from <em>project-schema.xml</em>
  to <em>killerapp-schema.xml</em>.
</p>

</section>

<section name="Configuring Torque">

<subsection name="build.properties">

<p>
  For a complete list of build properties, please refer to the
  <a href="properties-reference.html">properties reference</a>. Below
  is a short list of the primary properties you should be interested in.
</p>

<table>
  <tr>
    <td>torque.project</td>
  </tr>
  <tr>
    <td>torque.database</td>
  </tr>
  <tr>
    <td>torque.targetPackage</td>
  </tr>
  <tr>
    <td>torque.database.url</td>
  </tr>
  <tr>
    <td>torque.database.driver</td>
  </tr>
  <tr>
    <td>torque.database.user</td>
  </tr>
  <tr>
    <td>torque.database.password</td>
  </tr>
</table>

</subsection>

<subsection name="project-schema.xml">

<p>
  This is an example of what the XML database schema might look like. This
  particular example is a snippet of the database used for role-based
  user system of <a href="http://jakarta.apache.org/turbine/">Turbine</a>.
</p>

<source><![CDATA[
<database>

  <table name="ID_TABLE">
    <column name="ID_TABLE_ID" required="true" primaryKey="true" type="INTEGER"/>
    <column name="TABLE_NAME" required="true" size="255" type="VARCHAR"/>
    <column name="NEXT_ID" type="INTEGER"/>
    <column name="QUANTITY" type="INTEGER"/>

    <unique>
      <unique-column name="TABLE_NAME"/>
    </unique>

  </table>

  <table name="TURBINE_PERMISSION" idMethod="idbroker">
    <column name="PERMISSION_ID" required="true" primaryKey="true" type="INTEGER"/>
    <column name="PERMISSION_NAME" required="true" size="99" type="VARCHAR" javaName="Name"/>

    <unique>
      <unique-column name="PERMISSION_NAME"/>
    </unique>

  </table>

  <table name="TURBINE_ROLE_PERMISSION">
    <column name="ROLE_ID" required="true" primaryKey="true" type="INTEGER"/>
    <column name="PERMISSION_ID" required="true" primaryKey="true" type="INTEGER"/>

    <foreign-key foreignTable="TURBINE_ROLE">
      <reference local="ROLE_ID" foreign="ROLE_ID"/>
    </foreign-key>

    <foreign-key foreignTable="TURBINE_PERMISSION">
      <reference local="PERMISSION_ID" foreign="PERMISSION_ID"/>
    </foreign-key>
  </table>

</database>
]]></source>

<p>
  Please refer to <a href="schema-reference.html">Torque Schema Reference</a>
  to find out more about the the different elements and attributes.
</p>

</subsection>

<!--

<p>
  This is what the resultant SQL looks like, in the case the target database is
  <a href="http://www.mysql.com">MySQL</a>:
</p>

<source><![CDATA[
drop table if exists ID_TABLE;
CREATE TABLE ID_TABLE
(
    ID_TABLE_ID integer NOT NULL,
    TABLE_NAME varchar(255) NOT NULL,
    NEXT_ID integer,
    QUANTITY integer,
    PRIMARY KEY(ID_TABLE_ID),
    UNIQUE(TABLE_NAME)
);

drop table if exists Jobentry;
CREATE TABLE Jobentry
(
    OID integer NOT NULL,
    MINUTE integer default -1 NOT NULL,
    HOUR integer default -1 NOT NULL,
    WEEKDAY integer default -1 NOT NULL,
    DAY_OF_MONTH integer default -1 NOT NULL,
    TASK varchar(99) NOT NULL,
    EMAIL varchar(99),
    PRIMARY KEY(OID)
);
]]></source>

<p>
  This is what the sources look like for the Peer based object model:
</p>

<p>
  <ul>
    <li>BaseObjects
      <ul>
        <li><a href="resources/IdTable.java">IdTable.java</a></li>
        <li><a href="resources/Jobentry.java">Jobentry.java</a></li>
      </ul>
    </li>

    <li>Peers
      <ul>
        <li><a href="resources/IdTablePeer.java">IdTablePeer.java</a></li>
        <li><a href="resources/JobentryPeer.java">JobentryPeer.java</a></li>
      </ul>
    </li>

    <li>MapBuilders
      <ul>
        <li><a href="resources/IdTableMapBuilder.java">IdTableMapBuilder.java</a></li>
        <li><a href="resources/JobentryMapBuilder.java">JobentryMapBuilder.java</a></li>
      </ul>
    </li>
  </ul>
</p>

<p>
  Please refer to <a href="getting-started.html">Getting Started</a> to find out
  more about the Peer based object model.
</p>

<p>
  This is what the HTML description of the database looks like:
</p>

<table>
  <tr>
    <td colspan="3">
      <strong>
      <font face="Lucida,Verdana,Helvetica,Arial" color="white">ID_TABLE</font>
      </strong>
    </td>
  </tr>
  <tr>
    <td>Column</td><td>Type</td><td>Size</td>
  </tr>
  <tr>
    <td>ID_TABLE_ID</td><td >INTEGER</td><td>&#160;</td>
  </tr>
  <tr>
    <td>TABLE_NAME</td><td >VARCHAR</td><td >255&#160;</td>
  </tr>
  <tr>
    <td>NEXT_ID</td><td >INTEGER</td><td >&#160;</td>
  </tr>
  <tr>
    <td>QUANTITY</td><td >INTEGER</td><td >&#160;</td>
  </tr>

</table>

<table>
  <tr>
    <td colspan="3">
      <strong>
      <font face="Lucida,Verdana,Helvetica,Arial" color="white">Jobentry</font>
      </strong>
    </td>
  </tr>
  <tr><td>Column</td><td>Type</td><td>Size</td>
  </tr>
  <tr>
    <td>JOBID</td><td >INTEGER</td><td>&#160;</td>
  </tr>
  <tr>
    <td>MINUTE</td><td >INTEGER</td><td>&#160;</td>
  </tr>
  <tr>
    <td>HOUR</td><td >INTEGER</td><td>&#160;</td>
  </tr>
  <tr>
    <td>WEEKDAY</td><td >INTEGER</td><td>&#160;</td>
  </tr>
  <tr>
    <td>DAY_OF_MONTH</td><td >INTEGER</td><td>&#160;</td>
  </tr>
  <tr>
    <td>TASK</td><td >VARCHAR</td><td >99&#160;</td>
  </tr>
  <tr>
    <td>EMAIL</td><td >VARCHAR</td><td >99&#160;</td>
  </tr>

</table>
-->

</section>

  </body>
</document>
