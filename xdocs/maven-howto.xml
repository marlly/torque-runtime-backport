<?xml version="1.0"?>

<document>

  <properties>
    <title>Torque - Example Configuration for a Mavenized Project</title>
  </properties>

  <body>

<section name="Table of Contents">

<p>
  <ol>
    <li>
      <a href="#Introduction">Introduction</a>
    </li>
    <li>
      <a href="#Installation">Installation</a>
    </li>
    <li>
      <a href="#Building from Source">Building from Source</a>
    </li>
    <li>
      <a href="#Configuration">Configuration</a>
    </li>
    <li>
      <a href="#Other Tips">Other Tips</a>
    </li>
  </ol>
</p>

</section>

<section name="Introduction">

  <p>
    Torque projects used to be built with all of the Torque elements (templates,
    property files, <code>build-torque.xml</code>, etc.) locally installed in
    each project's source tree.
  </p>

  <p>
    The advent of Maven allows Torque to be used in a much simpler manner. With
    the Maven plugin, absolutely no Torque-related resources (except the Torque
    jar file iteself) are required to be locally installed in each project. 
    Instead, the plugin will automatically download any required resources for
    you.
  </p>
</section>

<section name="Installation">

  <p>
    The maven plugin is installed thus:
  </p>

<source><![CDATA[
!!! TO DO - The binary plugn is yet to be deployed, in the mean time you must build the plugin from source. !!!
!!! TO DO - Confirm these values !!!
maven plugin:download -DartifactId=maven-torque-plugin -DgroupId=maven-torque-plugin -Dversion=3.1.1
]]></source>

</section>

<section name="Building from Source">

  <p>
    Building the maven plugin from source is relatively easy - you might want
    to do this if there are fixes or enhancements in CVS that you want to make
    use of.  Another reason you might want to do this is if you wish to 
    make your own copy of the plugin that includes a set of customized 
    generator templates to modify the object model class files that will be
    produced.
  </p>

  <p>
    The first thing to do is to check out Torque from CVS (make sure you use
    branch tag you desire).  If you want to modify any of the generator 
    templates you would do this before running <code>maven 
    plugin:install</code> from the <code>src/maven-plugin</code> directory. 
    This will jar together the various plugin files copy it into your 
    <code>${maven.home}/plugins</code> directory.  
  </p>

  <p>
    For consistency you should also install the corresponding 
    generator and runtime jars in your local maven repository by running
    <code>maven jar:install</code> from the <code>src/generator</code> 
    and <code>src</code> directories respectively.
  </p>

</section>

<section name="Configuration">

  <p>
    The Torque Maven plugin is configured via properties defined in your 
    project.properties file.  See the 
    <a href="maven-plugin/properties.html">properties reference</a> for
    details on the various properties that can be configured.
  </p>

<subsection name="project.properties">

  <p>
    Instead of relying on the typical <code>build.properties</code>, the Maven
    plugin uses the project-wide settings in the <code>project.properties</code>
    file.  
  </p>

  <p>
    The Torque settings in <code>project.properties</code> follow the same
    format as they would in the old <code>build.properties</code> except the
    default directories are different to better fit a maven-ized project.
  </p>

  <p>
    
    Here is a sample configuration from <code>project.properties</code>:

<source><![CDATA[
... other project settings...

# -------------------------------------------------------------------
#
#  T O R Q U E   S E T T I N G S
#
# -------------------------------------------------------------------

torque.project = yourproject
torque.database = mysql

torque.database.createUrl = jdbc:mysql://localhost:3306/
torque.database.buildUrl = jdbc:mysql://localhost:3306/yourprojectdb
torque.database.url = jdbc:mysql://localhost:3306/yourprojectdb
torque.database.driver = org.gjt.mm.mysql.Driver
torque.database.user = user
torque.database.password = password
torque.database.host = localhost

]]></source>

  </p>
  
</subsection>


</section>

<section name="Other Tips">

  <p>
    If you run into problems, try the following tips:

    <ul>
      <li>
        Don't place your <code>project-schema.xml</code> file in a directory
        with other files. This can lead to various DTD errors.
      </li>
    </ul>

  </p>
</section>

  </body>
</document>
