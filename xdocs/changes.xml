<?xml version="1.0"?>
<document>
  <properties>
    <title>Changes</title>
    <author email="mpoeschl@marmot.at">Martin Poeschl</author>
  </properties>

  <body>

    <release version="3.2-alpha" date="in CVS">
      <action dev='seade' type='fix'>
        Generate sequences correctly for PostgreSQL (i.e. leave it to 
        PostgreSQL).  Note that schemas produced from the database using
        the <code>torque:jdbc</code> goal are not yet handling sequences
        correctly.
      </action>
      <action dev='henning' type='update'>
        Upgrade to commons-collections-3.0, commons-configuration-1.0-rc1 and
        commons-logging-1.0.4.
      </action>
      <action dev='seade' type='fix'>
        TRQD26: Problems with Torque tutorial.  The Torque tutorial has been 
        updated to reflect the separated generator and runtime components and
        to use the Maven plugin.
      </action>
      <action dev='seade' type='fix'>
        The generator logging configuration has been changed from DEBUG to INFO 
        - this will make the day of all those people that for some reason have 
        the torque-gen jar in their classpath at runtime.  <b>Hint: You don't
        need this jar to use the Torque generated object model classes.</b>
      </action>
      <action dev='mpoeschl' type='fix'>
        TRQS223: The get${pVarName} method in the Object.vm template does not 
        return related objects with a negative PK.  Thanks to Nick Curry for
        the patch.
      </action>
      <action dev='seade' type='add'>
        DB2 limit and offset support.  Thanks to Augustin Vidovic for the patch.
      </action>
      <action dev='seade' type='fix'>
        Fix NOT_LIKE with no wildcard bug.
      </action>
      <action dev='mpoeschl' type='fix'>
        TRQS97: Fix bad syntax in generated model when using primary keys of
        short or byte.
      </action>
      <action dev='mpoeschl' type='fix'>
        TRQS190: Error on "byte" data type generation rules.
      </action>
      <action dev='mpoeschl' type='remove'>
        Remove support for old properties (properties without 'torque.' prefix)
      </action>
      <action dev='mpoeschl' type='remove'>
        Remove support for idMethod=sequence and autoincrement.
      </action>
      <action dev='mpoeschl' type='add'>
        TRQS146: Support for scale.
      </action>
      <action dev='mpoeschl' type='remove'>
        Remove support for stratum lifecycle interfaces.
      </action>
      <action dev='mpoeschl' type='add'>
        TRQS163: Add domain element to schema.xml. Domains are used to define 
        attributes for columns.
      </action>
      <action dev='mpoeschl' type='update'>
        Upgrade to commons-lang-2.0
      </action>
      <action dev='mpoeschl' type='update'>
        Upgrade to commons-pool-1.1 and commons-dbcp-1.1
      </action>
      <action dev='mpoeschl' type='update'>
        Refactored generator model (removed AppData class)
      </action>
      <action dev='mpoeschl' type='fix'>
        TRQS180: NumberKey long constructor introduces rounding errors.
      </action>
      <action dev='mpoeschl' type='remove'>
        Removed the deprecated connection pool (commons-dbcp is used as
        default since 3.1)
      </action>
      <action dev='mpoeschl' type='add'>
        Changed ojb-model task to generate Object + BaseObject (like for the 
        torque om).
      </action>
      <action dev='mpoeschl' type='fix'>
        Fix package name for TorqueComponent in roleConfiguration.xml
      </action>
      <action dev='mpoeschl' type='remove'>
        Removed PasePeer.DEFAULT_MAP_BUILDER and BasePeer.getMapBuilder()
      </action>
      <action dev='seade' type='update'>
        TRQS149: For PostgreSQL the LONGVARCHAR datatype now maps to 
        <em>text</em> rather than <em>bytea</em>.
      </action>
      <action dev='seade' type='update'>
        Case insensitive LIKE comparisons now use ILIKE for PostgreSQL.
      </action>
      <action dev='seade' type='fix'>
        A minor template change has been made to correctly allow 
        Base[TableName]Peer.doDelete(criteria, connection) to be overridden in 
        [TableName]Peer.
      </action>
    </release>
  </body>
</document>

