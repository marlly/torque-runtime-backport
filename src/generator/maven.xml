<project
  default="jar:jar"
  xmlns:pom="pom"
  xmlns:deploy="deploy">

  <!-- Allow any user specific values to override the defaults -->
  <property file="${user.home}/build.properties" />

  <!-- ================================================================== -->
  <!-- C O M P I L E   P O S T   G O A L                                  -->
  <!-- ================================================================== -->
  <!-- copies the templates, dtd, .. to the ${maven.build.dest} to        -->
  <!-- include them in the jar file                                       -->
  <!-- ================================================================== -->
  <postGoal name="java:compile">
    <!-- copy default.properties to the right place -->
    <copy
      file="${maven.src.dir}/conf/default.properties"
      todir="${maven.build.dest}/org/apache/torque"
    />

    <!-- copy database.dtd to the right place -->
    <copy
      file="${maven.src.dir}/dtd/database.dtd"
      todir="${maven.build.dest}/org/apache/torque/engine/database/transform"
    />

    <!-- copy logging properties to the right place -->
    <copy
      file="${maven.src.dir}/conf/commons-logging.properties"
      todir="${maven.build.dest}"
    />
    <copy
      file="${maven.src.dir}/conf/simplelog.properties"
      todir="${maven.build.dest}"
    />
    <copy
      file="${maven.src.dir}/conf/log4j.properties"
      todir="${maven.build.dest}"
    />

    <!-- copy templates to the right place -->
    <copy todir="${maven.build.dest}">
      <fileset dir="${maven.src.dir}/templates" />
    </copy>
  </postGoal>
  
  
  <!-- ================================================================== -->
  <!-- X D O C : I N I T   P O S T   G O A L                              -->
  <!-- ================================================================== -->
  <postGoal name="xdoc:init">
    <!-- copy database.dtd to docs dir -->
    <copy
      file="${maven.src.dir}/dtd/database.dtd"
      tofile="target/docs/database.dtd.txt"
    />
  </postGoal>  

  <!-- ================================================================== -->
  <!-- D I S T : B U I L D _ B I N   P R E   G O A L                      -->
  <!-- ================================================================== -->
  <!-- copies jars, templates, ... to the ${maven.dist.bin.assembly.dir}  -->
  <!-- to include them in the binary dists                                -->
  <!-- ================================================================== -->
  <preGoal name="dist:build-bin">
    <!-- copy templates to the right place -->
    <copy todir="${maven.dist.bin.assembly.dir}/templates">
      <fileset dir="${maven.src.dir}/templates" />
    </copy>

    <!-- copy schema files to the right place -->
    <copy todir="${maven.dist.bin.assembly.dir}/schema">
      <fileset dir="${maven.src.dir}/schema" />
    </copy>

    <!-- copy master files to the right place -->
<!--    
    <copy todir="${maven.dist.bin.assembly.dir}/master">
      <fileset dir="${maven.src.dir}/conf/master" />
    </copy>
-->
    <!-- copy config files to the right place -->
    <copy todir="${maven.dist.bin.assembly.dir}">
      <fileset dir="${maven.src.dir}/conf" />
    </copy>

    <!-- include listed dependencies -->
    <deploy:copy-deps todir="${maven.dist.bin.assembly.dir}/lib"/>

    <!-- move torque.jar to /lib -->
    <move
      file="${maven.dist.bin.assembly.dir}/${maven.final.name}.jar"
      todir="${maven.dist.bin.assembly.dir}/lib"
    />
  </preGoal>

  <!-- ================================================================== -->
  <!-- D I S T : L I T E                                                  -->
  <!-- ================================================================== -->
  <!-- binary distribution without jars used by scarab                    -->
  <!-- ================================================================== -->
  <goal name="dist:lite"
        prereqs="jar:jar"
        description="distribution without dependency jars">

    <!-- copy templates to the right place -->
    <copy todir="${maven.dist.bin.assembly.dir}/templates">
      <fileset dir="${maven.src.dir}/templates" />
    </copy>

    <!-- copy schema files to the right place -->
    <copy todir="${maven.dist.bin.assembly.dir}/schema">
      <fileset dir="${maven.src.dir}/schema" />
    </copy>

    <!-- copy master files to the right place -->
    <copy todir="${maven.dist.bin.assembly.dir}/master">
      <fileset dir="${maven.src.dir}/conf/master" />
    </copy>

    <!-- copy config files to the right place -->
    <copy todir="${maven.dist.bin.assembly.dir}">
      <fileset dir="${maven.src.dir}/conf" />
    </copy>

    <!-- Copy Jars -->
    <copy todir="${maven.dist.bin.assembly.dir}/lib">
      <fileset dir="${maven.build.dir}">
        <include name="${maven.final.name}.jar"/>
      </fileset>
    </copy>

    <!-- Create a zip file -->
    <zip zipfile="${maven.build.dir}/${maven.final.name}.zip">
      <zipfileset dir="${maven.dist.bin.assembly.dir}"/>
    </zip>
  </goal>

  <!-- ================================================================== -->
  <!-- R U N T I M E T E S T                                              -->
  <!-- ================================================================== -->
  <goal
    name="runtime:test"
    prereqs="runtime:prepare"
    description="runtime tests (set torque.testProfile in your build.properties)">

    <ant antfile="build-test.xml"
         target="test"
         inheritAll="false"/>
  </goal>

  <goal
    name="runtime:test-classpath"
    prereqs="runtime:prepare"
    description="runtime tests using useClasspath property (set torque.testProfile in your build.properties)">

    <ant antfile="build-test.xml"
         target="test-classpath"
         inheritAll="false"/>
  </goal>

  <goal
    name="runtime:prepare"
    prereqs="jar:jar">

    <!-- Set values in test profile -->
    <property file="${torque.testProfile}"/>

    <!-- Use the profile as the build.properties file
         in the dist directory so that it is customizable
         by each tester. -->
    <echo message="Copying profile into distribution directory: ${torque.testProfile}"/>

    <filter token="APPLICATION_ROOT" value="."/>
    <filter token="DATABASE" value="${torque.database}"/>
    <filter token="DATABASE_DEFAULT" value="${torque.defaultDatabase}"/>
    <filter token="DATABASE_URL" value="${torque.database.url}"/>
    <filter token="DATABASE_USER" value="${torque.database.user}"/>
    <filter token="DATABASE_DRIVER" value="${torque.database.driver}"/>
    <filter token="DATABASE_PASSWORD" value="${torque.database.password}"/>
    <filter token="DATABASE_ID_METHOD" value="${torque.idMethod}"/>
    <filter token="DATABASE_ADAPTER" value="${torque.database}"/>

    <copy
      tofile="${torque.distDir}/build.properties"
      file="${torque.testProfile}"
      overwrite="yes"
    />

    <!-- copy test schemas -->
    <copy
      todir="${torque.distDir}/schema"
      filtering="yes"
      overwrite="yes">
      <fileset dir="${rttest.dir}">
        <include name="**/*.xml"/>
      </fileset>
    </copy>

    <!-- copy test sources -->
    <copy todir="${torque.distDir}/src/java">
      <fileset dir="${rttest.dir}"/>
    </copy>

    <copy
      tofile="${build.test}/rttest/build-torque.xml"
      file="${src.dir}/conf/build-torque.xml"
      overwrite="yes"
    />
    <copy
      tofile="${build.test}/rttest/default.properties"
      file="${src.dir}/conf/default.properties"
      overwrite="yes"
    />

    <!-- copy libs -->
    <deploy:copy-deps todir="${build.test}/rttest/lib"/>
    <copy file="${maven.build.dir}/${maven.final.name}.jar"
          todir="${build.test}/rttest/lib"/>
    <copy file="${torque.testDatabaseJar}"
          todir="${build.test}/rttest/lib"/>

    <!-- copy templates -->
    <copy todir="${build.test}/rttest/templates">
      <fileset dir="${src.dir}/templates"/>
    </copy>

    <!-- copy Torque.properties -->
    <copy
      tofile="${build.test}/rttest/Torque.properties"
      file="src/conf/master/Torque.master"
      filtering="yes"
      overwrite="yes"
    />

  </goal>


</project>
