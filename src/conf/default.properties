#
# This file maps old properties (and their defaults) to the
# new properties to maintain backwards compatibility.
#
# Note: lib.dir/torque.lib.dir and build.properties/
# torque.contextProperties are handled manually in 
# the build-torque.xml
#
# Old properties that are commented out are just
# place holders and could be removed other than they
# help me know what I have and haven't changed.


#######################################
#
#  B A S I C   P R O P E R T I E S
#
#######################################

torque.home = .

# project = bookstore
# database = postgresql
idTableXMLFile = 
documentationFormat = html
initialID = 101

torque.project = ${project}
torque.database = ${database}
torque.idTableXMLFile = ${idTableXMLFile}
torque.doc.format = ${documentationFormat}
torque.initialID = ${initialID}

#######################################
#
#  D I R E C T O R I E S
#
#######################################

outputDirectory = src
schemaDirectory = schema

torque.output.dir = ${torque.home}/${outputDirectory}
torque.schema.dir = ${torque.home}/${schemaDirectory}

torque.doc.dir = ${torque.output.dir}/doc
torque.java.dir = ${torque.output.dir}/java
torque.javadoc.dir = ${torque.output.dir}/javadoc
torque.ojb.dir = ${torque.output.dir}/ojb
torque.sql.dir = ${torque.output.dir}/sql
torque.basezip.dir = ${torque.output.dir}

#######################################
#
#  P A T H S
#
#######################################

templatePath = templates
useClasspath = false

torque.templatePath = ${templatePath}
torque.useClasspath = ${useClasspath}


#######################################
#
#  D A T A B A S E   S E T T I N G S
#
#######################################

# createDatabaseUrl = jdbc:postgresql://127.0.0.1:5432/template1
# buildDatabaseUrl = jdbc:postgresql://127.0.0.1:5432/bookstore
# databaseUrl = jdbc:postgresql://127.0.0.1:5432/bookstore
# databaseDriver = org.postgresql.Driver
# databaseUser = jvanzyl
# databasePassword =
# databaseHost = 127.0.0.1

torque.database.createUrl = ${createDatabaseUrl}
torque.database.buildUrl = ${buildDatabaseUrl}
torque.database.url = ${databaseUrl}
torque.database.driver = ${databaseDriver}
torque.database.user = ${databaseUser}
torque.database.password = ${databasePassword}
torque.database.host = ${databaseHost}


#######################################
#
#  C O N T R O L   T E M P L A T E S
#
#######################################

SQLControlTemplate = sql/base/Control.vm
OMControlTemplate = om/Control.vm
idTableControlTemplate = sql/id-table/Control.vm
DataDTDControlTemplate = data/Control.vm
DataDumpControlTemplate = data/dump/Control.vm
DataSQLControlTemplate = sql/load/Control.vm
DocControlTemplate = doc/Control.vm

torque.template.sql = ${SQLControlTemplate}
torque.template.om = ${OMControlTemplate}
torque.template.idTable = ${idTableControlTemplate}
torque.template.dataDtd = ${DataDTDControlTemplate}
torque.template.dataDump = ${DataDumpControlTemplate}
torque.template.dataSql = ${DataSQLControlTemplate}
torque.template.doc = ${DocControlTemplate}
torque.template.sqlDbInit = sql/db-init/Control.vm
torque.template.ojb = ojb/repository/Control.vm
torque.template.ojbModel = ojb/model/Control.vm


#######################################
#
#  C O M P I L E   S E T T I N G S
#
#######################################

src.dir = ${torque.java.dir}
build.dest = bin/classes
debug = on
deprecation = off
optimize = off

torque.compile.src.dir = ${src.dir}
torque.compile.build.dir = ${build.dest}
torque.compile.debug = ${debug}
torque.compile.deprecation = ${deprecation}
torque.compile.optimize = ${optimize}


#######################################
#
#  T E M P L A T E   V A R I A B L E S
#
# Eventually, I'd like to see any variables that are used by
# the templates specifically designated as so via a naming
# convention such as torque.context.xxx.
#
# Then when Texen loads the contextProperites, it can
# screen from torque.context.xxx and forget all the other
# junk.
#
#######################################

addGetByNameMethod = true
addIntakeRetrievable = false
addSaveMethod = true
addTimeStamp = true
basePrefix = Base
complexObjectModel = true
overloadKeySetters = true
useManagers = false
useClasspath = false
targetPackage = org.apache.torque

# torque.context.addGetByNameMethod = ${addGetByNameMethod}
# torque.context.addIntakeRetrievable = ${addIntakeRetrievable}
# torque.context.addSaveMethod = ${addSaveMethod}
# torque.context.addTimeStamp = ${addTimeStamp}
# torque.context.basePrefix = ${basePrefix}
# torque.context.complexObjectModel = ${complexObjectModel}
# torque.context.overloadKeySetters = ${overloadKeySetters}
# torque.context.useManagers = ${useManagers}
# torque.context.useClasspath = ${useClasspath}
# torque.context.targetPackage = ${targetPackage}

#### Left ####
# database.manual.creation
# databaseSchema
# dababaseName
# buildDatabaseUrl